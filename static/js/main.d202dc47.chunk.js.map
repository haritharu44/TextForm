{"version":3,"sources":["components/navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","tittle","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","backgroundColor","value","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","msg","App","setMode","setTimeout","_useState3","_useState4","setAlert","message","aboutText","light","body","title","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d202dc47.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function navbar(props) {\r\n  return (\r\n    <>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.tittle}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n\r\n<div className={`form-check form-switch mx-1 text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n\r\n    </div>\r\n  </div>\r\n</nav> \r\n    </>\r\n  )\r\n}\r\n\r\nnavbar.propTypes={\r\n    tittle:PropTypes.string,\r\n    aboutText:PropTypes.string\r\n\r\n}","import React, { useState } from 'react'\r\n// import propTypes from 'prop-types'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick=()=>{\r\n    // console.log('UpperCase was clicked'+text);\r\n    let newText=text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to UpperCase\",\"Success\");\r\n  }\r\n  const handleLoClick=()=>{\r\n    // console.log('UpperCase was clicked'+text);\r\n    let newText=text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to LowerCase\",\"Success\");\r\n  }\r\n  const handleClearClick=()=>{\r\n    // console.log('UpperCase was clicked'+text);\r\n    let newText=('');\r\n    setText(newText);\r\n    props.showAlert(\"Clear all Texts\",\"Success\");\r\n  }\r\n  \r\n  const handleOnchange=(event)=>{\r\n    console.log(\"onChange\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleCopyData = () => {\r\n    var text=document.getElementById('myBox');\r\n     text.select();\r\n     navigator.clipboard.writeText(text.value);\r\n     props.showAlert(\"Copied all Data\",\"Success\");\r\n  };\r\n\r\n  const handleExtraspace = () => {\r\n    let newText=text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Clean ExtraSpaces\",\"Success\");\r\n  };\r\n  const[text,setText]=useState(\"\");\r\n  return (\r\n  <div style={{color:props.mode==='dark'?'white':'black'}}>\r\n<div className=\"mb-3 my-5 container\">\r\n <h2>{props.heading}</h2>\r\n  <textarea className=\"form-control\"  style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} value={text} onChange={handleOnchange} id=\"myBox\" rows=\"8\"></textarea>\r\n  <button className='btn btn-primary my-3 ' onClick={handleUpClick}>Convert to UpperCase</button>\r\n  <button className='btn btn-primary m-3 ' onClick={handleLoClick}>Convert to LowerCase</button>\r\n  <button className='btn btn-primary' onClick={handleClearClick}>Clear Text</button>\r\n  <button className='btn btn-primary m-3'  onClick ={handleCopyData}>Copy Text</button>\r\n  <button className='btn btn-primary'  onClick ={handleExtraspace}>Clear ExtraSpaces</button>\r\n</div>\r\n<div className='container'>\r\n  <h1>Your Text Summary</h1>\r\n  <p>{text.split('').length} Words and {text.length} Characters</p>\r\n  <h2>Preview</h2>\r\n  <p>{text.length>0?text:'Write Something Else.'}</p>\r\n</div>\r\n</div>\r\n  )\r\n}\r\n\r\n\r\n// TextForm.propTypes={\r\n//     heading:propTypes.string\r\n// }","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  // const height={\r\n  //   width:\"100%\",\r\n  //   height:\"50px\"\r\n  // }\r\n  return (\r\n\r\n    props.alert && <div>\r\n      <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n      <strong>{props.alert.type}</strong>: {props.alert.msg} !\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import About from \"./components/about\";\n// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n   const [mode, setMode] = useState('light');\n\n   const toggleMode=(light)=>{\n    if(mode === 'light'){\n      setMode(\"dark\");\n      document.body.style.backgroundColor='#352f8b';\n      showAlert(\"Dark Mode has been Enabled\",\"Success\");\n      document.title='TextUtils-DarkMode';\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has been Enabled\",\"Success\");\n      document.title='TextUtils-LightMode';\n    }\n  }\n  setTimeout(() => {\n    document.tittle='TextUtils-Home';\n  }, 1500);\n   const [alert, setAlert] = useState(null);\n\n   const showAlert=(message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n   }\n   setTimeout(() => {\n    setAlert(\"\");\n   }, 2000);\n   \n  //  const [col, setCol] = useState('light');\n  //  const toggle=(light)=>{\n  //     if(col==='light'){\n  //       setCol('dark');\n  //       document.body.style.backgroundColor='#352f8b';\n\n  //     }else{\n  //       setCol('light');\n  //       document.body.style.backgroundColor='white';\n  //     }\n  //  }\n  return (\n    <>\n    {/* <BrowserRouter> */}\n    <Navbar tittle=\"PropsTittle\" aboutText=\"About\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n      {/* <Routes> */}\n{/* <Route path='/about' element={}> */}\n{/* <About dark={toggle} col={col}/> */}\n {/* </Route> */}\n {/* <Route path='/' element={  }> */}\n <TextForm heading=\"Enter the Text to Analyze Below\" text=\"Enter text\" showAlert={showAlert} mode={mode} />\n {/* </Route>\n</Routes>\n</BrowserRouter>  */}\n\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/> \n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}